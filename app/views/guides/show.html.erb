<eadiv id="map-canvas"></div>
<div class="sidebar">
  <h3><%= @guide.name %></h3>
    <% @guide.places.each do |place| %>
      <div class="item" id="<%= place.id %>">
        <%= link_to place.name, place %>
        <div class ="description" >
          <%= place.description %>
        </div>
        <% if user_is_creator?(place.guide) %>
          <%= link_to 'Edit', edit_place_path(place) %>
          <%= link_to 'Destroy', place, method: :delete, data: { confirm: 'Are you sure?' } %>
        <% end %>
      </div>
    <% end %>
</div>
<%= link_to 'Edit', edit_guide_path(@guide) %> |
<%= link_to 'Back', guides_path %>
<script type="text/javascript">
      $(document).ready(function(){


        markers = <%=raw @locations.to_json %>;
        placeMarkers = [];
        
        // default map style
        mapOptions = {
          center: new google.maps.LatLng(<%= @center_point[0] %>,<%= @center_point[1] %>),
          zoom: 10,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };


        function addMarker(marker_info) {

          var latLng = new google.maps.LatLng(marker_info.latitude, marker_info.longitude);
          var content = marker_info.infowindow;

          var marker = new google.maps.Marker({
            position: latLng,
            map: null,
            title: marker_info.name,
          });

          if (marker_info.drop) {
              marker.setAnimation(google.maps.Animation.DROP);
          }

          marker.id = marker_info.id;
          marker.name = marker_info.name;
          marker.description = marker_info.description;
          marker.contentString = "<b>" + marker.name +"</b></br>" + marker.description; 

          placeMarkers.push(marker);

          infowindow = new google.maps.InfoWindow(); 

          google.maps.event.addListener(marker, 'click', function(e) {
              onItemClick(marker, map); 
          });

          google.maps.event.addListener(marker, 'mouseover', function(e) {
              onItemMouseOver(e, marker); 
          });

          google.maps.event.addListener(marker, 'mouseout', function(e) {
              onItemMouseOut(e, marker); 
          });

          function onItemClick(marker,map) {
              undoHighlights('.item'); 
              highlightPlace(marker);
              disableOnItemMouseOut(marker);
              createInfoBox(marker,map);
          }

          function onItemMouseOver(event, marker){
            highlightPlace(marker);
          }
          function onItemMouseOut(event, marker){
            undoHighlights("#"+marker.id);
          }

          function disableOnItemMouseOut(marker){
            google.maps.event.addListener(marker, 'mouseout', function(e) {
              highlightPlace(marker); 
            });
          }

          function highlightPlace(marker){
            $("#"+marker.id).addClass("highlighted");
          }

          function alreadyHighlighted(marker){

          }

          function undoHighlights(item){
            $(item).removeClass("highlighted");
          }

          function createInfoBox(marker,map){
            infowindow.setContent(marker.contentString); 
            infowindow.setPosition(marker.position); 
            infowindow.open(map) 
          }

        }

        markers.forEach(function(marker){
          addMarker(marker);
        });

        function setAllMap(map) {
            for (var i = 0; i < placeMarkers.length; i++) {
                placeMarkers[i].setMap(map);
            }            
        }

        map = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);
        setAllMap(map);
      })
  </script>